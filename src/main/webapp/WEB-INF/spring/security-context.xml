<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


<bean id="customAccessDenied" class="org.zerock.security.CustomAccessDeniedHandler"></bean>
<bean id="customLoginSuccess" class="org.zerock.security.CustomLoginSuccessHandler"></bean>
<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
<bean id="customUserDetailsService" class="org.zerock.security.CustomUserDetailsService"></bean>
<security:http>
	<!-- 모두 접근가능 -->
	<security:intercept-url pattern="/login/all" access="permitAll"/>
	
	<!-- ROLE_MEMBER 권한이 있어야만 접근가능 -->
	<security:intercept-url pattern="/login/member" access="hasRole('ROLE_MEMBER')"/>
	
	<!-- ROLE_ADMIN 권한이 있어야만 접근가능 -->
	<security:intercept-url pattern="/login/admin" access="hasRole('ROLE_ADMIN')"/>
	
	<!-- error-page를 '/accessError' URI로 지정 -->
	<security:access-denied-handler ref="customAccessDenied"/>

	<!-- 커스텀 로그인 페이지 --> <!-- 로그인 성공 후 처리 -->
	<security:form-login login-page="/customLogin" authentication-success-handler-ref="customLoginSuccess" />
	
	<!-- 로그아웃 처리 -->
	<security:logout logout-url="/customLogout" invalidate-session="true"/>
</security:http>

<security:authentication-manager>
	<security:authentication-provider
		user-service-ref="customUserDetailsService">
	
		<!-- 비밀번호 인코딩용 -->
		<security:password-encoder
		ref="bcryptPasswordEncoder"/>
	</security:authentication-provider>
</security:authentication-manager>

</beans>
